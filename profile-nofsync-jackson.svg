<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="869"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="869"> </text>
<g id="frames">
<g>
<title>all (84 samples, 100.00%)</title><rect x="10.0" y="835.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="846.0">all</text>
</g>
<g>
<title>MainKt.main (2 samples, 2.38%)</title><rect x="10.0" y="819.0" width="28.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="830.0">Ma..</text>
</g>
<g>
<title>MainKt.main (2 samples, 2.38%)</title><rect x="10.0" y="803.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="814.0">Ma..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 2.38%)</title><rect x="10.0" y="787.0" width="28.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="798.0">ja..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 2.38%)</title><rect x="10.0" y="771.0" width="28.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="782.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 2.38%)</title><rect x="10.0" y="755.0" width="28.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 2.38%)</title><rect x="10.0" y="739.0" width="28.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 2.38%)</title><rect x="10.0" y="723.0" width="28.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 2.38%)</title><rect x="10.0" y="707.0" width="28.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="718.0">jd..</text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 1.19%)</title><rect x="10.0" y="691.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 1.19%)</title><rect x="10.0" y="675.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 1.19%)</title><rect x="10.0" y="659.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 1.19%)</title><rect x="10.0" y="643.0" width="14.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 1.19%)</title><rect x="10.0" y="627.0" width="14.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 1.19%)</title><rect x="10.0" y="611.0" width="14.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 1.19%)</title><rect x="10.0" y="595.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.19%)</title><rect x="10.0" y="579.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 1.19%)</title><rect x="10.0" y="563.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 1.19%)</title><rect x="10.0" y="547.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 1.19%)</title><rect x="10.0" y="531.0" width="14.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 1.19%)</title><rect x="10.0" y="515.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 1.19%)</title><rect x="10.0" y="499.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>SymbolTable::lookup_shared(char const*, int, unsigned int) (1 samples, 1.19%)</title><rect x="10.0" y="483.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getByteBuffer (1 samples, 1.19%)</title><rect x="24.0" y="691.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.cachedInputStream (1 samples, 1.19%)</title><rect x="24.0" y="675.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$FileLoader$1.getInputStream (1 samples, 1.19%)</title><rect x="24.0" y="659.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.0" y="670.0"></text>
</g>
<g>
<title>java/io/FileInputStream.&lt;init&gt; (1 samples, 1.19%)</title><rect x="24.0" y="643.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.0" y="654.0"></text>
</g>
<g>
<title>java/io/FileCleanable.register (1 samples, 1.19%)</title><rect x="24.0" y="627.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.0" y="638.0"></text>
</g>
<g>
<title>java/io/FileCleanable.&lt;init&gt; (1 samples, 1.19%)</title><rect x="24.0" y="611.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 1.19%)</title><rect x="24.0" y="595.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.0" y="606.0"></text>
</g>
<g>
<title>com/intellij/rt/execution/application/AppMainV2$1.run (2 samples, 2.38%)</title><rect x="38.1" y="819.0" width="28.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.1" y="830.0">co..</text>
</g>
<g>
<title>java/net/Socket.&lt;init&gt; (2 samples, 2.38%)</title><rect x="38.1" y="803.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.1" y="814.0">ja..</text>
</g>
<g>
<title>java/net/Socket.&lt;init&gt; (2 samples, 2.38%)</title><rect x="38.1" y="787.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.1" y="798.0">ja..</text>
</g>
<g>
<title>java/net/Socket.connect (1 samples, 1.19%)</title><rect x="38.1" y="771.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.1" y="782.0"></text>
</g>
<g>
<title>java/net/Socket.connect (1 samples, 1.19%)</title><rect x="38.1" y="755.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.1" y="766.0"></text>
</g>
<g>
<title>java/net/SocksSocketImpl.connect (1 samples, 1.19%)</title><rect x="38.1" y="739.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.1" y="750.0"></text>
</g>
<g>
<title>java/net/AbstractPlainSocketImpl.connect (1 samples, 1.19%)</title><rect x="38.1" y="723.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.1" y="734.0"></text>
</g>
<g>
<title>java/net/AbstractPlainSocketImpl.connectToAddress (1 samples, 1.19%)</title><rect x="38.1" y="707.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.1" y="718.0"></text>
</g>
<g>
<title>java/net/AbstractPlainSocketImpl.doConnect (1 samples, 1.19%)</title><rect x="38.1" y="691.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.1" y="702.0"></text>
</g>
<g>
<title>java/net/PlainSocketImpl.socketConnect (1 samples, 1.19%)</title><rect x="38.1" y="675.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.1" y="686.0"></text>
</g>
<g>
<title>java/net/NetworkInterface.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="38.1" y="659.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.1" y="670.0"></text>
</g>
<g>
<title>java/net/DefaultInterface.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="38.1" y="643.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.1" y="654.0"></text>
</g>
<g>
<title>java/net/DefaultInterface.chooseDefaultInterface (1 samples, 1.19%)</title><rect x="38.1" y="627.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.1" y="638.0"></text>
</g>
<g>
<title>java/net/NetworkInterface.getInetAddresses (1 samples, 1.19%)</title><rect x="38.1" y="611.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.1" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="38.1" y="595.0" width="14.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="41.1" y="606.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="38.1" y="579.0" width="14.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="41.1" y="590.0"></text>
</g>
<g>
<title>java/net/Socket.setImpl (1 samples, 1.19%)</title><rect x="52.1" y="771.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.1" y="782.0"></text>
</g>
<g>
<title>java/net/PlainSocketImpl.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="52.1" y="755.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.1" y="766.0"></text>
</g>
<g>
<title>sun/net/ext/ExtendedSocketOptions.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="52.1" y="739.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 1.19%)</title><rect x="52.1" y="723.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 1.19%)</title><rect x="52.1" y="707.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.1" y="718.0"></text>
</g>
<g>
<title>jdk/net/ExtendedSocketOptions.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="52.1" y="691.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.1" y="702.0"></text>
</g>
<g>
<title>jdk/net/ExtendedSocketOptions$PlatformSocketOptions.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="52.1" y="675.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.1" y="686.0"></text>
</g>
<g>
<title>jdk/net/ExtendedSocketOptions$PlatformSocketOptions.create (1 samples, 1.19%)</title><rect x="52.1" y="659.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.1" y="670.0"></text>
</g>
<g>
<title>jdk/net/ExtendedSocketOptions$PlatformSocketOptions.newInstance (1 samples, 1.19%)</title><rect x="52.1" y="643.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 1.19%)</title><rect x="52.1" y="627.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 1.19%)</title><rect x="52.1" y="611.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.1" y="622.0"></text>
</g>
<g>
<title>jdk/net/MacOSXSocketOptions.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="52.1" y="595.0" width="14.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.1" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 1.19%)</title><rect x="52.1" y="579.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.1" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 1.19%)</title><rect x="52.1" y="563.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.1" y="574.0"></text>
</g>
<g>
<title>jdk/net/MacOSXSocketOptions$$Lambda$14/1162371649.run (1 samples, 1.19%)</title><rect x="52.1" y="547.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.1" y="558.0"></text>
</g>
<g>
<title>jdk/net/MacOSXSocketOptions.lambda$static$0 (1 samples, 1.19%)</title><rect x="52.1" y="531.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.1" y="542.0"></text>
</g>
<g>
<title>java/lang/System.loadLibrary (1 samples, 1.19%)</title><rect x="52.1" y="515.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Runtime.loadLibrary0 (1 samples, 1.19%)</title><rect x="52.1" y="499.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.1" y="510.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadLibrary (1 samples, 1.19%)</title><rect x="52.1" y="483.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.1" y="494.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadLibrary0 (1 samples, 1.19%)</title><rect x="52.1" y="467.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.1" y="478.0"></text>
</g>
<g>
<title>java/lang/ClassLoader$NativeLibrary.loadLibrary (1 samples, 1.19%)</title><rect x="52.1" y="451.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="52.1" y="435.0" width="14.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="55.1" y="446.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="66.2" y="819.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="66.2" y="803.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="66.2" y="787.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="66.2" y="771.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findLoadedModule (1 samples, 1.19%)</title><rect x="66.2" y="755.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.2" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="66.2" y="739.0" width="14.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="69.2" y="750.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="66.2" y="723.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="69.2" y="734.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_itable_call(Bytecodes::Code, Klass*, methodHandle const&amp;, int) (1 samples, 1.19%)</title><rect x="66.2" y="707.0" width="14.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="69.2" y="718.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 1.19%)</title><rect x="66.2" y="691.0" width="14.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="69.2" y="702.0"></text>
</g>
<g>
<title>kotlin/concurrent/ThreadsKt$thread$thread$1.run (28 samples, 33.33%)</title><rect x="80.2" y="819.0" width="393.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.2" y="830.0">kotlin/concurrent/ThreadsKt$thread$thread$1.run</text>
</g>
<g>
<title>MainKt$main$1.invoke (28 samples, 33.33%)</title><rect x="80.2" y="803.0" width="393.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.2" y="814.0">MainKt$main$1.invoke</text>
</g>
<g>
<title>MainKt$main$1.invoke (28 samples, 33.33%)</title><rect x="80.2" y="787.0" width="393.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.2" y="798.0">MainKt$main$1.invoke</text>
</g>
<g>
<title>MainKt.test (28 samples, 33.33%)</title><rect x="80.2" y="771.0" width="393.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.2" y="782.0">MainKt.test</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="80.2" y="755.0" width="14.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="83.2" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="80.2" y="739.0" width="14.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="83.2" y="750.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 1.19%)</title><rect x="80.2" y="723.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="83.2" y="734.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 1.19%)</title><rect x="80.2" y="707.0" width="14.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="83.2" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 1.19%)</title><rect x="80.2" y="691.0" width="14.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="83.2" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 1.19%)</title><rect x="80.2" y="675.0" width="14.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="83.2" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 1.19%)</title><rect x="80.2" y="659.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="83.2" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 1.19%)</title><rect x="80.2" y="643.0" width="14.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="83.2" y="654.0"></text>
</g>
<g>
<title>Method::link_method(methodHandle const&amp;, Thread*) (1 samples, 1.19%)</title><rect x="80.2" y="627.0" width="14.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="83.2" y="638.0"></text>
</g>
<g>
<title>Method::is_empty_method() const (1 samples, 1.19%)</title><rect x="80.2" y="611.0" width="14.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="83.2" y="622.0"></text>
</g>
<g>
<title>core.StandardLogStructuredMergeTree.put (26 samples, 30.95%)</title><rect x="94.3" y="755.0" width="365.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="766.0">core.StandardLogStructuredMergeTree.put</text>
</g>
<g>
<title>StandardWriteAheadLogManager.append (26 samples, 30.95%)</title><rect x="94.3" y="739.0" width="365.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.3" y="750.0">StandardWriteAheadLogManager.append</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.writeValue (9 samples, 10.71%)</title><rect x="94.3" y="723.0" width="126.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.3" y="734.0">com/fasterxml/ja..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._writeValueAndClose (8 samples, 9.52%)</title><rect x="94.3" y="707.0" width="112.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.3" y="718.0">com/fasterxml/..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator.close (1 samples, 1.19%)</title><rect x="94.3" y="691.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.3" y="702.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8JsonGenerator._releaseBuffers (1 samples, 1.19%)</title><rect x="94.3" y="675.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.3" y="686.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.releaseConcatBuffer (1 samples, 1.19%)</title><rect x="94.3" y="659.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.3" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecycler.releaseCharBuffer (1 samples, 1.19%)</title><rect x="94.3" y="643.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceArray.set (1 samples, 1.19%)</title><rect x="94.3" y="627.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 1.19%)</title><rect x="94.3" y="611.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.3" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.serializeValue (7 samples, 8.33%)</title><rect x="108.3" y="691.0" width="98.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.3" y="702.0">com/fasterxm..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.findTypedValueSerializer (5 samples, 5.95%)</title><rect x="108.3" y="675.0" width="70.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.3" y="686.0">com/fast..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.findValueSerializer (3 samples, 3.57%)</title><rect x="108.3" y="659.0" width="42.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.3" y="670.0">com/..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider._createAndCacheUntypedSerializer (2 samples, 2.38%)</title><rect x="108.3" y="643.0" width="28.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.3" y="654.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider._createUntypedSerializer (2 samples, 2.38%)</title><rect x="108.3" y="627.0" width="28.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.3" y="638.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.createSerializer (2 samples, 2.38%)</title><rect x="108.3" y="611.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.3" y="622.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory._createSerializer2 (2 samples, 2.38%)</title><rect x="108.3" y="595.0" width="28.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.3" y="606.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.buildContainerSerializer (2 samples, 2.38%)</title><rect x="108.3" y="579.0" width="28.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.3" y="590.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.buildMapSerializer (2 samples, 2.38%)</title><rect x="108.3" y="563.0" width="28.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.3" y="574.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory._checkMapContentInclusion (1 samples, 1.19%)</title><rect x="108.3" y="547.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.3" y="558.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory._findInclusionWithContent (1 samples, 1.19%)</title><rect x="108.3" y="531.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.3" y="542.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.customSerializers (1 samples, 1.19%)</title><rect x="122.4" y="547.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.4" y="558.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.serializers (1 samples, 1.19%)</title><rect x="122.4" y="531.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="122.4" y="515.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="122.4" y="499.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="122.4" y="483.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="122.4" y="467.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 1.19%)</title><rect x="122.4" y="451.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 1.19%)</title><rect x="122.4" y="435.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/loader/Resource.getBytes (1 samples, 1.19%)</title><rect x="122.4" y="419.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 1.19%)</title><rect x="122.4" y="403.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.4" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.handleSecondaryContextualization (1 samples, 1.19%)</title><rect x="136.4" y="643.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.4" y="654.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.createContextual (1 samples, 1.19%)</title><rect x="136.4" y="627.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.4" y="638.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/StdSerializer.findFormatOverrides (1 samples, 1.19%)</title><rect x="136.4" y="611.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.4" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.getDefaultPropertyFormat (1 samples, 1.19%)</title><rect x="136.4" y="595.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.4" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfigBase.getDefaultPropertyFormat (1 samples, 1.19%)</title><rect x="136.4" y="579.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.4" y="590.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/ConfigOverrides.findFormatDefaults (1 samples, 1.19%)</title><rect x="136.4" y="563.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.4" y="574.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 1.19%)</title><rect x="136.4" y="547.0" width="14.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="139.4" y="558.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 1.19%)</title><rect x="136.4" y="531.0" width="14.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="139.4" y="542.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 1.19%)</title><rect x="136.4" y="515.0" width="14.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="139.4" y="526.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 1.19%)</title><rect x="136.4" y="499.0" width="14.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="139.4" y="510.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::create_mdo(methodHandle const&amp;, JavaThread*) (1 samples, 1.19%)</title><rect x="136.4" y="483.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="139.4" y="494.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 1.19%)</title><rect x="136.4" y="467.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="139.4" y="478.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 1.19%)</title><rect x="136.4" y="451.0" width="14.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="139.4" y="462.0"></text>
</g>
<g>
<title>MethodData::initialize() (1 samples, 1.19%)</title><rect x="136.4" y="435.0" width="14.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="139.4" y="446.0"></text>
</g>
<g>
<title>MethodData::post_initialize(BytecodeStream*) (1 samples, 1.19%)</title><rect x="136.4" y="419.0" width="14.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="139.4" y="430.0"></text>
</g>
<g>
<title>BranchData::post_initialize(BytecodeStream*, MethodData*) (1 samples, 1.19%)</title><rect x="136.4" y="403.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="139.4" y="414.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 1.19%)</title><rect x="136.4" y="387.0" width="14.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="139.4" y="398.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 1.19%)</title><rect x="136.4" y="371.0" width="14.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="139.4" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.createTypeSerializer (2 samples, 2.38%)</title><rect x="150.5" y="659.0" width="28.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.5" y="670.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfig.introspectClassAnnotations (2 samples, 2.38%)</title><rect x="150.5" y="643.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.5" y="654.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfig.constructType (1 samples, 1.19%)</title><rect x="150.5" y="627.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.5" y="638.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (1 samples, 1.19%)</title><rect x="150.5" y="611.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.5" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (1 samples, 1.19%)</title><rect x="150.5" y="595.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.5" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfig.introspectClassAnnotations (1 samples, 1.19%)</title><rect x="164.5" y="627.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.5" y="638.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.forClassAnnotations (1 samples, 1.19%)</title><rect x="164.5" y="611.0" width="14.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.5" y="622.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.forClassAnnotations (1 samples, 1.19%)</title><rect x="164.5" y="595.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.5" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector._resolveAnnotatedClass (1 samples, 1.19%)</title><rect x="164.5" y="579.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.5" y="590.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.resolve (1 samples, 1.19%)</title><rect x="164.5" y="563.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.5" y="574.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.resolveFully (1 samples, 1.19%)</title><rect x="164.5" y="547.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.5" y="558.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/DefaultSerializerProvider._serialize (2 samples, 2.38%)</title><rect x="178.6" y="675.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.6" y="686.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (2 samples, 2.38%)</title><rect x="178.6" y="659.0" width="28.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.6" y="670.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serialize (2 samples, 2.38%)</title><rect x="178.6" y="643.0" width="28.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.6" y="654.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeWithoutTypeInfo (2 samples, 2.38%)</title><rect x="178.6" y="627.0" width="28.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.6" y="638.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/MapSerializer.serializeFields (2 samples, 2.38%)</title><rect x="178.6" y="611.0" width="28.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.6" y="622.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/StdKeySerializers$Dynamic.serialize (1 samples, 1.19%)</title><rect x="178.6" y="595.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.6" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/StdKeySerializers$Dynamic._findAndAddDynamic (1 samples, 1.19%)</title><rect x="178.6" y="579.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.6" y="590.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/impl/PropertySerializerMap.findAndAddKeySerializer (1 samples, 1.19%)</title><rect x="178.6" y="563.0" width="14.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="181.6" y="574.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/SerializerProvider.findKeySerializer (1 samples, 1.19%)</title><rect x="178.6" y="547.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.6" y="558.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/MapperConfig.constructType (1 samples, 1.19%)</title><rect x="178.6" y="531.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.6" y="542.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (1 samples, 1.19%)</title><rect x="178.6" y="515.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.6" y="526.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (1 samples, 1.19%)</title><rect x="178.6" y="499.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="181.6" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (1 samples, 1.19%)</title><rect x="178.6" y="483.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.6" y="494.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._findWellKnownSimple (1 samples, 1.19%)</title><rect x="178.6" y="467.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.6" y="478.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/std/StringSerializer.serialize (1 samples, 1.19%)</title><rect x="192.6" y="595.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.6" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.createGenerator (1 samples, 1.19%)</title><rect x="206.7" y="707.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.7" y="718.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createGenerator (1 samples, 1.19%)</title><rect x="206.7" y="691.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.7" y="702.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createUTF8Generator (1 samples, 1.19%)</title><rect x="206.7" y="675.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.7" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="206.7" y="659.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="206.7" y="643.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="206.7" y="627.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="206.7" y="611.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 1.19%)</title><rect x="206.7" y="595.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 1.19%)</title><rect x="206.7" y="579.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.7" y="590.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 1.19%)</title><rect x="206.7" y="563.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.7" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 1.19%)</title><rect x="206.7" y="547.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.7" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 1.19%)</title><rect x="206.7" y="531.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.7" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 1.19%)</title><rect x="206.7" y="515.0" width="14.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="209.7" y="526.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 1.19%)</title><rect x="206.7" y="499.0" width="14.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="209.7" y="510.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 1.19%)</title><rect x="206.7" y="483.0" width="14.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="209.7" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 1.19%)</title><rect x="206.7" y="467.0" width="14.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="209.7" y="478.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 1.19%)</title><rect x="206.7" y="451.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="209.7" y="462.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 1.19%)</title><rect x="206.7" y="435.0" width="14.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="209.7" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/module/kotlin/ExtensionsKt.jacksonObjectMapper (17 samples, 20.24%)</title><rect x="220.7" y="723.0" width="238.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.7" y="734.0">com/fasterxml/jackson/module/kot..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.&lt;clinit&gt; (5 samples, 5.95%)</title><rect x="220.7" y="707.0" width="70.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.7" y="718.0">com/fast..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/BaseSettings.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="220.7" y="691.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.7" y="702.0"></text>
</g>
<g>
<title>java/util/TimeZone.getTimeZone (1 samples, 1.19%)</title><rect x="220.7" y="675.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.7" y="686.0"></text>
</g>
<g>
<title>java/util/TimeZone.getTimeZone (1 samples, 1.19%)</title><rect x="220.7" y="659.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.7" y="670.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTimeZone (1 samples, 1.19%)</title><rect x="220.7" y="643.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.7" y="654.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="220.7" y="627.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.7" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 1.19%)</title><rect x="220.7" y="611.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.7" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 1.19%)</title><rect x="220.7" y="595.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.7" y="606.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile$1.run (1 samples, 1.19%)</title><rect x="220.7" y="579.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.7" y="590.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile$1.run (1 samples, 1.19%)</title><rect x="220.7" y="563.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.7" y="574.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.load (1 samples, 1.19%)</title><rect x="220.7" y="547.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.7" y="558.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="220.7" y="531.0" width="14.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="223.7" y="542.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="220.7" y="515.0" width="14.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="223.7" y="526.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 1.19%)</title><rect x="220.7" y="499.0" width="14.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="223.7" y="510.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 1.19%)</title><rect x="220.7" y="483.0" width="14.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="223.7" y="494.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 1.19%)</title><rect x="220.7" y="467.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="223.7" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 1.19%)</title><rect x="220.7" y="451.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="223.7" y="462.0"></text>
</g>
<g>
<title>JavaFieldStream::JavaFieldStream(InstanceKlass const*) (1 samples, 1.19%)</title><rect x="220.7" y="435.0" width="14.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="223.7" y="446.0"></text>
</g>
<g>
<title>FieldStreamBase::FieldStreamBase(Array&lt;unsigned short&gt;*, constantPoolHandle const&amp;, int, int) (1 samples, 1.19%)</title><rect x="220.7" y="419.0" width="14.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="223.7" y="430.0"></text>
</g>
<g>
<title>FieldInfo::from_field_array(Array&lt;unsigned short&gt;*, int) (1 samples, 1.19%)</title><rect x="220.7" y="403.0" width="14.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="223.7" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/StdDateFormat.&lt;clinit&gt; (3 samples, 3.57%)</title><rect x="234.8" y="691.0" width="42.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.8" y="702.0">com/..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.&lt;init&gt; (3 samples, 3.57%)</title><rect x="234.8" y="675.0" width="42.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.8" y="686.0">java..</text>
</g>
<g>
<title>java/text/SimpleDateFormat.initializeCalendar (3 samples, 3.57%)</title><rect x="234.8" y="659.0" width="42.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.8" y="670.0">java..</text>
</g>
<g>
<title>java/util/Calendar.getInstance (3 samples, 3.57%)</title><rect x="234.8" y="643.0" width="42.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.8" y="654.0">java..</text>
</g>
<g>
<title>java/util/Calendar.createCalendar (2 samples, 2.38%)</title><rect x="234.8" y="627.0" width="28.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.8" y="638.0">ja..</text>
</g>
<g>
<title>sun/util/locale/provider/CalendarProviderImpl.getInstance (2 samples, 2.38%)</title><rect x="234.8" y="611.0" width="28.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.8" y="622.0">su..</text>
</g>
<g>
<title>java/util/Calendar$Builder.build (2 samples, 2.38%)</title><rect x="234.8" y="595.0" width="28.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.8" y="606.0">ja..</text>
</g>
<g>
<title>java/util/GregorianCalendar.&lt;init&gt; (2 samples, 2.38%)</title><rect x="234.8" y="579.0" width="28.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.8" y="590.0">ja..</text>
</g>
<g>
<title>java/util/Calendar.&lt;init&gt; (2 samples, 2.38%)</title><rect x="234.8" y="563.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.8" y="574.0">ja..</text>
</g>
<g>
<title>java/util/Calendar.setWeekCountData (2 samples, 2.38%)</title><rect x="234.8" y="547.0" width="28.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.8" y="558.0">ja..</text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataUtility.retrieveFirstDayOfWeek (2 samples, 2.38%)</title><rect x="234.8" y="531.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.8" y="542.0">su..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.getLocalizedObject (2 samples, 2.38%)</title><rect x="234.8" y="515.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.8" y="526.0">su..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.getLocalizedObjectImpl (2 samples, 2.38%)</title><rect x="234.8" y="499.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.8" y="510.0">su..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.findProviders (2 samples, 2.38%)</title><rect x="234.8" y="483.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.8" y="494.0">su..</text>
</g>
<g>
<title>java/util/spi/LocaleServiceProvider.isSupportedLocale (2 samples, 2.38%)</title><rect x="234.8" y="467.0" width="28.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.8" y="478.0">ja..</text>
</g>
<g>
<title>java/util/Locale.equals (1 samples, 1.19%)</title><rect x="234.8" y="451.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.8" y="462.0"></text>
</g>
<g>
<title>sun/util/locale/BaseLocale.equals (1 samples, 1.19%)</title><rect x="234.8" y="435.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.8" y="446.0"></text>
</g>
<g>
<title>sun/util/locale/provider/CalendarDataProviderImpl.getAvailableLocales (1 samples, 1.19%)</title><rect x="248.8" y="451.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.8" y="462.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.toLocaleArray (1 samples, 1.19%)</title><rect x="248.8" y="435.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.8" y="446.0"></text>
</g>
<g>
<title>java/util/Locale.forLanguageTag (1 samples, 1.19%)</title><rect x="248.8" y="419.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.8" y="430.0"></text>
</g>
<g>
<title>java/util/Locale.getInstance (1 samples, 1.19%)</title><rect x="248.8" y="403.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.8" y="414.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleObjectCache.get (1 samples, 1.19%)</title><rect x="248.8" y="387.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.8" y="398.0"></text>
</g>
<g>
<title>java/util/Calendar.defaultTimeZone (1 samples, 1.19%)</title><rect x="262.9" y="627.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.9" y="638.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefault (1 samples, 1.19%)</title><rect x="262.9" y="611.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.9" y="622.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefaultRef (1 samples, 1.19%)</title><rect x="262.9" y="595.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="265.9" y="606.0"></text>
</g>
<g>
<title>java/util/TimeZone.setDefaultZone (1 samples, 1.19%)</title><rect x="262.9" y="579.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.9" y="590.0"></text>
</g>
<g>
<title>java/util/TimeZone.getTimeZone (1 samples, 1.19%)</title><rect x="262.9" y="563.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.9" y="574.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTimeZone (1 samples, 1.19%)</title><rect x="262.9" y="547.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.9" y="558.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.getZoneInfo (1 samples, 1.19%)</title><rect x="262.9" y="531.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.9" y="542.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.getZoneInfo0 (1 samples, 1.19%)</title><rect x="262.9" y="515.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.9" y="526.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.getZoneInfo (1 samples, 1.19%)</title><rect x="262.9" y="499.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.9" y="510.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfoFile.getZoneInfo (1 samples, 1.19%)</title><rect x="262.9" y="483.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="265.9" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 1.19%)</title><rect x="262.9" y="467.0" width="14.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="265.9" y="478.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="451.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="265.9" y="462.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="435.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="265.9" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="419.0" width="14.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="265.9" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="403.0" width="14.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="265.9" y="414.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="387.0" width="14.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="265.9" y="398.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="371.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="265.9" y="382.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="355.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="265.9" y="366.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="339.0" width="14.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="265.9" y="350.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="323.0" width="14.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="265.9" y="334.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="307.0" width="14.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="265.9" y="318.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="291.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="265.9" y="302.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="275.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="265.9" y="286.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="259.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="265.9" y="270.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="243.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="265.9" y="254.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="227.0" width="14.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="265.9" y="238.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="211.0" width="14.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="265.9" y="222.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="195.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="265.9" y="206.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="179.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="265.9" y="190.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 1.19%)</title><rect x="262.9" y="163.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="265.9" y="174.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="276.9" y="691.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="276.9" y="675.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="276.9" y="659.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="276.9" y="643.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 1.19%)</title><rect x="276.9" y="627.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 1.19%)</title><rect x="276.9" y="611.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.9" y="622.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 1.19%)</title><rect x="276.9" y="595.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.9" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 1.19%)</title><rect x="276.9" y="579.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.9" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 1.19%)</title><rect x="276.9" y="563.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.9" y="574.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 1.19%)</title><rect x="276.9" y="547.0" width="14.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="279.9" y="558.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 1.19%)</title><rect x="276.9" y="531.0" width="14.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="279.9" y="542.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 1.19%)</title><rect x="276.9" y="515.0" width="14.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="279.9" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 1.19%)</title><rect x="276.9" y="499.0" width="14.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="279.9" y="510.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.19%)</title><rect x="276.9" y="483.0" width="14.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="279.9" y="494.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 1.19%)</title><rect x="276.9" y="467.0" width="14.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="279.9" y="478.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 1.19%)</title><rect x="276.9" y="451.0" width="14.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="279.9" y="462.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 1.19%)</title><rect x="276.9" y="435.0" width="14.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="279.9" y="446.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 1.19%)</title><rect x="276.9" y="419.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="279.9" y="430.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 1.19%)</title><rect x="276.9" y="403.0" width="14.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="279.9" y="414.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;Symbol*, SymbolTableConfig, (MemoryType)9&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 1.19%)</title><rect x="276.9" y="387.0" width="14.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="279.9" y="398.0"></text>
</g>
<g>
<title>Symbol** ConcurrentHashTable&lt;Symbol*, SymbolTableConfig, (MemoryType)9&gt;::internal_get&lt;SymbolTableLookup&gt;(Thread*, SymbolTableLookup&amp;, bool*) (1 samples, 1.19%)</title><rect x="276.9" y="371.0" width="14.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="279.9" y="382.0"></text>
</g>
<g>
<title>ConcurrentHashTable&lt;Symbol*, SymbolTableConfig, (MemoryType)9&gt;::Node* ConcurrentHashTable&lt;Symbol*, SymbolTableConfig, (MemoryType)9&gt;::get_node&lt;SymbolTableLookup&gt;(ConcurrentHashTable&lt;Symbol*, SymbolTableConfig, (MemoryType)9&gt;::Bucket const*, SymbolTableLookup&amp;, bool*, unsigned long*) const (1 samples, 1.19%)</title><rect x="276.9" y="355.0" width="14.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="279.9" y="366.0"></text>
</g>
<g>
<title>SymbolTableLookup::equals(Symbol**, bool*) (1 samples, 1.19%)</title><rect x="276.9" y="339.0" width="14.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="279.9" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.&lt;init&gt; (9 samples, 10.71%)</title><rect x="291.0" y="707.0" width="126.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.0" y="718.0">com/fasterxml/ja..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.&lt;init&gt; (9 samples, 10.71%)</title><rect x="291.0" y="691.0" width="126.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.0" y="702.0">com/fasterxml/ja..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 1.19%)</title><rect x="291.0" y="675.0" width="14.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="294.0" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 1.19%)</title><rect x="291.0" y="659.0" width="14.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="294.0" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 1.19%)</title><rect x="291.0" y="643.0" width="14.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="294.0" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 1.19%)</title><rect x="291.0" y="627.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="294.0" y="638.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 1.19%)</title><rect x="291.0" y="611.0" width="14.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="294.0" y="622.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 1.19%)</title><rect x="291.0" y="595.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="294.0" y="606.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 1.19%)</title><rect x="291.0" y="579.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="294.0" y="590.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_method_signature(Symbol*) (1 samples, 1.19%)</title><rect x="291.0" y="563.0" width="14.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="294.0" y="574.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_type(char const*, long) (1 samples, 1.19%)</title><rect x="291.0" y="547.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="294.0" y="558.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="305.0" y="675.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.0" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="305.0" y="659.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="305.0" y="643.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="305.0" y="627.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="308.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="305.0" y="611.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="305.0" y="595.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="305.0" y="579.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.0" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.getClassLoadingLock (1 samples, 1.19%)</title><rect x="305.0" y="563.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 1.19%)</title><rect x="305.0" y="547.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.0" y="558.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/DeserializationConfig.&lt;init&gt; (1 samples, 1.19%)</title><rect x="319.0" y="675.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.0" y="686.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="319.0" y="659.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="322.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="319.0" y="643.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="319.0" y="627.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="319.0" y="611.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 1.19%)</title><rect x="319.0" y="595.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 1.19%)</title><rect x="319.0" y="579.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.0" y="590.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 1.19%)</title><rect x="319.0" y="563.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.0" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 1.19%)</title><rect x="319.0" y="547.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 1.19%)</title><rect x="319.0" y="531.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="322.0" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 1.19%)</title><rect x="319.0" y="515.0" width="14.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="322.0" y="526.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 1.19%)</title><rect x="319.0" y="499.0" width="14.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="322.0" y="510.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 1.19%)</title><rect x="319.0" y="483.0" width="14.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="322.0" y="494.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 1.19%)</title><rect x="319.0" y="467.0" width="14.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="322.0" y="478.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 1.19%)</title><rect x="319.0" y="451.0" width="14.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="322.0" y="462.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 1.19%)</title><rect x="319.0" y="435.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="322.0" y="446.0"></text>
</g>
<g>
<title>klassVtable::compute_vtable_size_and_num_mirandas(int*, int*, GrowableArray&lt;Method*&gt;*, Klass const*, Array&lt;Method*&gt;*, AccessFlags, unsigned short, Handle, Symbol*, Array&lt;InstanceKlass*&gt;*, Thread*) (1 samples, 1.19%)</title><rect x="319.0" y="419.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="322.0" y="430.0"></text>
</g>
<g>
<title>klassVtable::needs_new_vtable_entry(methodHandle const&amp;, Klass const*, Handle, Symbol*, AccessFlags, unsigned short, Thread*) (1 samples, 1.19%)</title><rect x="319.0" y="403.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="322.0" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 1.19%)</title><rect x="319.0" y="387.0" width="14.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="322.0" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 1.19%)</title><rect x="319.0" y="371.0" width="14.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="322.0" y="382.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (1 samples, 1.19%)</title><rect x="319.0" y="355.0" width="14.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="322.0" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.defaultClassIntrospector (1 samples, 1.19%)</title><rect x="333.1" y="675.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.1" y="686.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/BasicClassIntrospector.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="333.1" y="659.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.1" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedClassResolver.createPrimordial (1 samples, 1.19%)</title><rect x="333.1" y="643.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.1" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 1.19%)</title><rect x="333.1" y="627.0" width="14.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="336.1" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 1.19%)</title><rect x="333.1" y="611.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="336.1" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 1.19%)</title><rect x="333.1" y="595.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="336.1" y="606.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 1.19%)</title><rect x="333.1" y="579.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="336.1" y="590.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 1.19%)</title><rect x="333.1" y="563.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="336.1" y="574.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 1.19%)</title><rect x="333.1" y="547.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="336.1" y="558.0"></text>
</g>
<g>
<title>ClassVerifier::verify_field_instructions(RawBytecodeStream*, StackMapFrame*, constantPoolHandle const&amp;, bool, Thread*) (1 samples, 1.19%)</title><rect x="333.1" y="531.0" width="14.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="336.1" y="542.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_type_signature(Symbol*) (1 samples, 1.19%)</title><rect x="333.1" y="515.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="336.1" y="526.0"></text>
</g>
<g>
<title>SignatureVerifier::is_valid_type(char const*, long) (1 samples, 1.19%)</title><rect x="333.1" y="499.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="336.1" y="510.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="347.1" y="675.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.1" y="686.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="347.1" y="659.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="347.1" y="643.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="347.1" y="627.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="347.1" y="611.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="347.1" y="595.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 1.19%)</title><rect x="347.1" y="579.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 1.19%)</title><rect x="347.1" y="563.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.1" y="574.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 1.19%)</title><rect x="347.1" y="547.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.1" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 1.19%)</title><rect x="347.1" y="531.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.1" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClassSourceLocation (1 samples, 1.19%)</title><rect x="347.1" y="515.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.1" y="526.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.&lt;clinit&gt; (1 samples, 1.19%)</title><rect x="361.2" y="675.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.2" y="686.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BeanSerializerFactory.&lt;init&gt; (1 samples, 1.19%)</title><rect x="361.2" y="659.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="364.2" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ser/BasicSerializerFactory.&lt;init&gt; (1 samples, 1.19%)</title><rect x="361.2" y="643.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.2" y="654.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 1.19%)</title><rect x="361.2" y="627.0" width="14.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="364.2" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 1.19%)</title><rect x="361.2" y="611.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="364.2" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 1.19%)</title><rect x="361.2" y="595.0" width="14.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="364.2" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::rewrite_class(Thread*) (1 samples, 1.19%)</title><rect x="361.2" y="579.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="364.2" y="590.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 1.19%)</title><rect x="361.2" y="563.0" width="14.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="364.2" y="574.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 1.19%)</title><rect x="361.2" y="547.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="364.2" y="558.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 1.19%)</title><rect x="361.2" y="531.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="364.2" y="542.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Method*, bool, bool*) (1 samples, 1.19%)</title><rect x="361.2" y="515.0" width="14.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="364.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 3.57%)</title><rect x="375.2" y="675.0" width="42.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.2" y="686.0">java..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 3.57%)</title><rect x="375.2" y="659.0" width="42.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.2" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 3.57%)</title><rect x="375.2" y="643.0" width="42.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.2" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 3.57%)</title><rect x="375.2" y="627.0" width="42.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.2" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 3.57%)</title><rect x="375.2" y="611.0" width="42.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.2" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 2.38%)</title><rect x="375.2" y="595.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.2" y="606.0">jd..</text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 2.38%)</title><rect x="375.2" y="579.0" width="28.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.2" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 2.38%)</title><rect x="375.2" y="563.0" width="28.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.2" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (2 samples, 2.38%)</title><rect x="375.2" y="547.0" width="28.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.2" y="558.0">ja..</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (2 samples, 2.38%)</title><rect x="375.2" y="531.0" width="28.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="378.2" y="542.0">Ja..</text>
</g>
<g>
<title>JVM_DefineClassWithSource (2 samples, 2.38%)</title><rect x="375.2" y="515.0" width="28.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="378.2" y="526.0">JV..</text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (2 samples, 2.38%)</title><rect x="375.2" y="499.0" width="28.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="378.2" y="510.0">jv..</text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (2 samples, 2.38%)</title><rect x="375.2" y="483.0" width="28.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="378.2" y="494.0">Sy..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (2 samples, 2.38%)</title><rect x="375.2" y="467.0" width="28.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="378.2" y="478.0">Kl..</text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (2 samples, 2.38%)</title><rect x="375.2" y="451.0" width="28.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="378.2" y="462.0">Cl..</text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (2 samples, 2.38%)</title><rect x="375.2" y="435.0" width="28.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="378.2" y="446.0">Cl..</text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 1.19%)</title><rect x="375.2" y="419.0" width="14.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="378.2" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 1.19%)</title><rect x="375.2" y="403.0" width="14.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="378.2" y="414.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 1.19%)</title><rect x="375.2" y="387.0" width="14.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="378.2" y="398.0"></text>
</g>
<g>
<title>SymbolTable::do_lookup(char const*, int, unsigned long) (1 samples, 1.19%)</title><rect x="375.2" y="371.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="378.2" y="382.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;Symbol*, SymbolTableConfig, (MemoryType)9&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 1.19%)</title><rect x="375.2" y="355.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="378.2" y="366.0"></text>
</g>
<g>
<title>Symbol** ConcurrentHashTable&lt;Symbol*, SymbolTableConfig, (MemoryType)9&gt;::internal_get&lt;SymbolTableLookup&gt;(Thread*, SymbolTableLookup&amp;, bool*) (1 samples, 1.19%)</title><rect x="375.2" y="339.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="378.2" y="350.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 1.19%)</title><rect x="389.3" y="419.0" width="14.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="392.3" y="430.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 1.19%)</title><rect x="389.3" y="403.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="392.3" y="414.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_name(Symbol const*, Thread*) const (1 samples, 1.19%)</title><rect x="389.3" y="387.0" width="14.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="392.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 1.19%)</title><rect x="403.3" y="595.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.3" y="606.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/module/kotlin/ExtensionsKt.registerKotlinModule (1 samples, 1.19%)</title><rect x="417.4" y="707.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.4" y="718.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.registerModule (1 samples, 1.19%)</title><rect x="417.4" y="691.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="420.4" y="702.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/module/kotlin/KotlinModule.setupModule (1 samples, 1.19%)</title><rect x="417.4" y="675.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.4" y="686.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper$1.addValueInstantiators (1 samples, 1.19%)</title><rect x="417.4" y="659.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.4" y="670.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.withValueInstantiators (1 samples, 1.19%)</title><rect x="417.4" y="643.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.4" y="654.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.withValueInstantiators (1 samples, 1.19%)</title><rect x="417.4" y="627.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="417.4" y="611.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="417.4" y="595.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="417.4" y="579.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="417.4" y="563.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 1.19%)</title><rect x="417.4" y="547.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 1.19%)</title><rect x="417.4" y="531.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="420.4" y="542.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 1.19%)</title><rect x="417.4" y="515.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.4" y="526.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.getProtectionDomain (1 samples, 1.19%)</title><rect x="417.4" y="499.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.4" y="510.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 1.19%)</title><rect x="417.4" y="483.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="420.4" y="494.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 1.19%)</title><rect x="417.4" y="467.0" width="14.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="420.4" y="478.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 1.19%)</title><rect x="417.4" y="451.0" width="14.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="420.4" y="462.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 1.19%)</title><rect x="417.4" y="435.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="420.4" y="446.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 1.19%)</title><rect x="417.4" y="419.0" width="14.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="420.4" y="430.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 1.19%)</title><rect x="417.4" y="403.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="420.4" y="414.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 1.19%)</title><rect x="417.4" y="387.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="420.4" y="398.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 1.19%)</title><rect x="417.4" y="371.0" width="14.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="420.4" y="382.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 2.38%)</title><rect x="431.4" y="707.0" width="28.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.4" y="718.0">ja..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (2 samples, 2.38%)</title><rect x="431.4" y="691.0" width="28.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.4" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 2.38%)</title><rect x="431.4" y="675.0" width="28.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.4" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 2.38%)</title><rect x="431.4" y="659.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.4" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (2 samples, 2.38%)</title><rect x="431.4" y="643.0" width="28.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.4" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 2.38%)</title><rect x="431.4" y="627.0" width="28.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.4" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$FileLoader.getResource (1 samples, 1.19%)</title><rect x="431.4" y="611.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.4" y="622.0"></text>
</g>
<g>
<title>java/io/File.exists (1 samples, 1.19%)</title><rect x="431.4" y="595.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.4" y="606.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes (1 samples, 1.19%)</title><rect x="431.4" y="579.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.4" y="590.0"></text>
</g>
<g>
<title>java/io/UnixFileSystem.getBooleanAttributes0 (1 samples, 1.19%)</title><rect x="431.4" y="563.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.4" y="574.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 1.19%)</title><rect x="431.4" y="547.0" width="14.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="434.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getResource (1 samples, 1.19%)</title><rect x="445.5" y="611.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="448.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.checkResource (1 samples, 1.19%)</title><rect x="445.5" y="595.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.5" y="606.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 1.19%)</title><rect x="445.5" y="579.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.5" y="590.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 1.19%)</title><rect x="445.5" y="563.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.5" y="574.0"></text>
</g>
<g>
<title>sun/net/www/protocol/jar/Handler.parseURL (1 samples, 1.19%)</title><rect x="445.5" y="547.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 1.19%)</title><rect x="445.5" y="531.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 1.19%)</title><rect x="445.5" y="515.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 1.19%)</title><rect x="445.5" y="499.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 1.19%)</title><rect x="459.5" y="755.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 1.19%)</title><rect x="459.5" y="739.0" width="14.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.19%)</title><rect x="459.5" y="723.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.5" y="734.0"></text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndCallPremain (4 samples, 4.76%)</title><rect x="473.6" y="819.0" width="56.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.6" y="830.0">sun/in..</text>
</g>
<g>
<title>sun/instrument/InstrumentationImpl.loadClassAndStartAgent (4 samples, 4.76%)</title><rect x="473.6" y="803.0" width="56.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.6" y="814.0">sun/in..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (3 samples, 3.57%)</title><rect x="473.6" y="787.0" width="42.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.6" y="798.0">java..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (3 samples, 3.57%)</title><rect x="473.6" y="771.0" width="42.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.6" y="782.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (3 samples, 3.57%)</title><rect x="473.6" y="755.0" width="42.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.6" y="766.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (3 samples, 3.57%)</title><rect x="473.6" y="739.0" width="42.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.6" y="750.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (3 samples, 3.57%)</title><rect x="473.6" y="723.0" width="42.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.6" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 1.19%)</title><rect x="473.6" y="707.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$2.getManifest (1 samples, 1.19%)</title><rect x="473.6" y="691.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.6" y="702.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getManifest (1 samples, 1.19%)</title><rect x="473.6" y="675.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.6" y="686.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getManifestFromReference (1 samples, 1.19%)</title><rect x="473.6" y="659.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.6" y="670.0"></text>
</g>
<g>
<title>java/util/jar/table.Manifest.&lt;init&gt; (1 samples, 1.19%)</title><rect x="473.6" y="643.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.6" y="654.0"></text>
</g>
<g>
<title>java/util/jar/table.Manifest.&lt;init&gt; (1 samples, 1.19%)</title><rect x="473.6" y="627.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.6" y="638.0"></text>
</g>
<g>
<title>java/util/jar/table.Manifest.read (1 samples, 1.19%)</title><rect x="473.6" y="611.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.6" y="622.0"></text>
</g>
<g>
<title>java/util/jar/Attributes.read (1 samples, 1.19%)</title><rect x="473.6" y="595.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.19%)</title><rect x="473.6" y="579.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.19%)</title><rect x="473.6" y="563.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.lookupCharset (1 samples, 1.19%)</title><rect x="473.6" y="547.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.6" y="558.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.isSupported (1 samples, 1.19%)</title><rect x="473.6" y="531.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.6" y="542.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.lookup (1 samples, 1.19%)</title><rect x="473.6" y="515.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.6" y="526.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.lookup2 (1 samples, 1.19%)</title><rect x="473.6" y="499.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/cs/StandardCharsets.charsetForName (1 samples, 1.19%)</title><rect x="473.6" y="483.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/cs/StandardCharsets.lookup (1 samples, 1.19%)</title><rect x="473.6" y="467.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/cs/StandardCharsets.toLower (1 samples, 1.19%)</title><rect x="473.6" y="451.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.6" y="462.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="473.6" y="435.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="476.6" y="446.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 1.19%)</title><rect x="473.6" y="419.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="476.6" y="430.0"></text>
</g>
<g>
<title>ConstantPool::impl_signature_ref_at(int, bool) (1 samples, 1.19%)</title><rect x="473.6" y="403.0" width="14.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="476.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (2 samples, 2.38%)</title><rect x="487.6" y="707.0" width="28.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.6" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 2.38%)</title><rect x="487.6" y="691.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.6" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getLoader (2 samples, 2.38%)</title><rect x="487.6" y="675.0" width="28.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.6" y="686.0">jd..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 2.38%)</title><rect x="487.6" y="659.0" width="28.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.6" y="670.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (2 samples, 2.38%)</title><rect x="487.6" y="643.0" width="28.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.6" y="654.0">ja..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 2.38%)</title><rect x="487.6" y="627.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.6" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$3.run (2 samples, 2.38%)</title><rect x="487.6" y="611.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.6" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.&lt;init&gt; (2 samples, 2.38%)</title><rect x="487.6" y="595.0" width="28.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.6" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.ensureOpen (2 samples, 2.38%)</title><rect x="487.6" y="579.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.6" y="590.0">jd..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 2.38%)</title><rect x="487.6" y="563.0" width="28.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.6" y="574.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (2 samples, 2.38%)</title><rect x="487.6" y="547.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.6" y="558.0">ja..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 2.38%)</title><rect x="487.6" y="531.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="490.6" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader$1.run (2 samples, 2.38%)</title><rect x="487.6" y="515.0" width="28.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.6" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$JarLoader.getJarFile (1 samples, 1.19%)</title><rect x="487.6" y="499.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.6" y="510.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.&lt;init&gt; (1 samples, 1.19%)</title><rect x="487.6" y="483.0" width="14.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.6" y="494.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 1.19%)</title><rect x="487.6" y="467.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="490.6" y="478.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.&lt;init&gt; (1 samples, 1.19%)</title><rect x="487.6" y="451.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.6" y="462.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.&lt;init&gt; (1 samples, 1.19%)</title><rect x="487.6" y="435.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.6" y="446.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$Source.get (1 samples, 1.19%)</title><rect x="487.6" y="419.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.6" y="430.0"></text>
</g>
<g>
<title>java/io/File.toPath (1 samples, 1.19%)</title><rect x="487.6" y="403.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="490.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 1.19%)</title><rect x="487.6" y="387.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.&lt;init&gt; (1 samples, 1.19%)</title><rect x="487.6" y="371.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixPath.encode (1 samples, 1.19%)</title><rect x="487.6" y="355.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (1 samples, 1.19%)</title><rect x="487.6" y="339.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (1 samples, 1.19%)</title><rect x="487.6" y="323.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.inflate (1 samples, 1.19%)</title><rect x="487.6" y="307.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/util/jar/JarIndex.getJarIndex (1 samples, 1.19%)</title><rect x="501.7" y="499.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.7" y="510.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getJarEntry (1 samples, 1.19%)</title><rect x="501.7" y="483.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.7" y="494.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getEntry (1 samples, 1.19%)</title><rect x="501.7" y="467.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.7" y="478.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.isMultiRelease (1 samples, 1.19%)</title><rect x="501.7" y="451.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.7" y="462.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.checkForSpecialAttributes (1 samples, 1.19%)</title><rect x="501.7" y="435.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.7" y="446.0"></text>
</g>
<g>
<title>java/util/jar/JarFile.getBytes (1 samples, 1.19%)</title><rect x="501.7" y="419.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.7" y="430.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile.getInputStream (1 samples, 1.19%)</title><rect x="501.7" y="403.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.7" y="414.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.&lt;init&gt; (1 samples, 1.19%)</title><rect x="501.7" y="387.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.7" y="398.0"></text>
</g>
<g>
<title>java/util/zip/ZipFile$CleanableResource.getInflater (1 samples, 1.19%)</title><rect x="501.7" y="371.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.7" y="382.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.&lt;init&gt; (1 samples, 1.19%)</title><rect x="501.7" y="355.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.7" y="366.0"></text>
</g>
<g>
<title>java/util/zip/Inflater.init (1 samples, 1.19%)</title><rect x="501.7" y="339.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findNative (1 samples, 1.19%)</title><rect x="501.7" y="323.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="504.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ClassLoader$NativeLibrary.findEntry (1 samples, 1.19%)</title><rect x="501.7" y="307.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.7" y="318.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_00024NativeLibrary_findEntry (1 samples, 1.19%)</title><rect x="501.7" y="291.0" width="14.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="504.7" y="302.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 1.19%)</title><rect x="501.7" y="275.0" width="14.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="504.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="259.0" width="14.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="504.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="243.0" width="14.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="504.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="227.0" width="14.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="504.7" y="238.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="211.0" width="14.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="504.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="195.0" width="14.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="504.7" y="206.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="179.0" width="14.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="504.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="163.0" width="14.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="504.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="147.0" width="14.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="504.7" y="158.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="131.0" width="14.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="504.7" y="142.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="115.0" width="14.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="504.7" y="126.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="99.0" width="14.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="504.7" y="110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="83.0" width="14.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="504.7" y="94.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="67.0" width="14.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="504.7" y="78.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="51.0" width="14.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="504.7" y="62.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 1.19%)</title><rect x="501.7" y="35.0" width="14.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="504.7" y="46.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 1.19%)</title><rect x="515.7" y="787.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 1.19%)</title><rect x="515.7" y="771.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (1 samples, 1.19%)</title><rect x="515.7" y="755.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (1 samples, 1.19%)</title><rect x="515.7" y="739.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.7" y="750.0"></text>
</g>
<g>
<title>com/intellij/rt/execution/application/AppMainV2$Agent.premain (1 samples, 1.19%)</title><rect x="515.7" y="723.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.7" y="734.0"></text>
</g>
<g>
<title>com/intellij/rt/execution/application/AppMainV2.premain (1 samples, 1.19%)</title><rect x="515.7" y="707.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.7" y="718.0"></text>
</g>
<g>
<title>com/intellij/rt/execution/application/AppMainV2.startMonitor (1 samples, 1.19%)</title><rect x="515.7" y="691.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 1.19%)</title><rect x="515.7" y="675.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 1.19%)</title><rect x="515.7" y="659.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="670.0"></text>
</g>
<g>
<title>JVM_StartThread (1 samples, 1.19%)</title><rect x="515.7" y="643.0" width="14.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="518.7" y="654.0"></text>
</g>
<g>
<title>os::start_thread(Thread*) (1 samples, 1.19%)</title><rect x="515.7" y="627.0" width="14.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="518.7" y="638.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 1.19%)</title><rect x="515.7" y="611.0" width="14.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="518.7" y="622.0"></text>
</g>
<g>
<title>sun/launcher/LauncherHelper.checkAndLoadMain (1 samples, 1.19%)</title><rect x="529.8" y="819.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.8" y="830.0"></text>
</g>
<g>
<title>sun/launcher/LauncherHelper.loadMainClass (1 samples, 1.19%)</title><rect x="529.8" y="803.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 1.19%)</title><rect x="529.8" y="787.0" width="14.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="532.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 1.19%)</title><rect x="529.8" y="771.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.8" y="782.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 1.19%)</title><rect x="529.8" y="755.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 1.19%)</title><rect x="529.8" y="739.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 1.19%)</title><rect x="529.8" y="723.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 1.19%)</title><rect x="529.8" y="707.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassOnClassPathOrNull (1 samples, 1.19%)</title><rect x="529.8" y="691.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath.getResource (1 samples, 1.19%)</title><rect x="529.8" y="675.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/loader/URLClassPath$FileLoader.getResource (1 samples, 1.19%)</title><rect x="529.8" y="659.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.8" y="670.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 1.19%)</title><rect x="529.8" y="643.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.8" y="654.0"></text>
</g>
<g>
<title>java/net/URL.&lt;init&gt; (1 samples, 1.19%)</title><rect x="529.8" y="627.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 1.19%)</title><rect x="529.8" y="611.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.8" y="622.0"></text>
</g>
<g>
<title>thread_start (46 samples, 54.76%)</title><rect x="543.8" y="819.0" width="646.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="546.8" y="830.0">thread_start</text>
</g>
<g>
<title>_pthread_start (45 samples, 53.57%)</title><rect x="557.9" y="803.0" width="632.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="560.9" y="814.0">_pthread_start</text>
</g>
<g>
<title>thread_native_entry(Thread*) (45 samples, 53.57%)</title><rect x="557.9" y="787.0" width="632.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="560.9" y="798.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (45 samples, 53.57%)</title><rect x="557.9" y="771.0" width="632.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="560.9" y="782.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 4.76%)</title><rect x="557.9" y="755.0" width="56.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="560.9" y="766.0">GangWo..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 4.76%)</title><rect x="557.9" y="739.0" width="56.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="560.9" y="750.0">G1ParT..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 1.19%)</title><rect x="557.9" y="723.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="560.9" y="734.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal(unsigned int, StarTask&amp;) (1 samples, 1.19%)</title><rect x="557.9" y="707.0" width="14.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="560.9" y="718.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, StarTask&amp;) (1 samples, 1.19%)</title><rect x="557.9" y="691.0" width="14.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="560.9" y="702.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::pop_global(StarTask volatile&amp;) (1 samples, 1.19%)</title><rect x="557.9" y="675.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="560.9" y="686.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 2.38%)</title><rect x="571.9" y="723.0" width="28.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="574.9" y="734.0">G1..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 2.38%)</title><rect x="571.9" y="707.0" width="28.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="574.9" y="718.0">G1..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 2.38%)</title><rect x="571.9" y="691.0" width="28.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="574.9" y="702.0">G1..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (2 samples, 2.38%)</title><rect x="571.9" y="675.0" width="28.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="574.9" y="686.0">Di..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_buffer(CardTableEntryClosure*, BufferNode*, bool, unsigned int) (2 samples, 2.38%)</title><rect x="571.9" y="659.0" width="28.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="574.9" y="670.0">Di..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 2.38%)</title><rect x="571.9" y="643.0" width="28.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="574.9" y="654.0">G1..</text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 2.38%)</title><rect x="571.9" y="627.0" width="28.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="574.9" y="638.0">G1..</text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 2.38%)</title><rect x="571.9" y="611.0" width="28.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="574.9" y="622.0">bo..</text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 2.38%)</title><rect x="571.9" y="595.0" width="28.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="574.9" y="606.0">G1..</text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 1.19%)</title><rect x="586.0" y="579.0" width="14.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="589.0" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (1 samples, 1.19%)</title><rect x="586.0" y="563.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="589.0" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 1.19%)</title><rect x="600.0" y="723.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="603.0" y="734.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 1.19%)</title><rect x="600.0" y="707.0" width="14.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="603.0" y="718.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 1.19%)</title><rect x="600.0" y="691.0" width="14.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="603.0" y="702.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_strong_code_roots(HeapRegion*) (1 samples, 1.19%)</title><rect x="600.0" y="675.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="603.0" y="686.0"></text>
</g>
<g>
<title>G1CodeRootSetTable::nmethods_do(CodeBlobClosure*) (1 samples, 1.19%)</title><rect x="600.0" y="659.0" width="14.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="603.0" y="670.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 1.19%)</title><rect x="600.0" y="643.0" width="14.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="603.0" y="654.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 1.19%)</title><rect x="600.0" y="627.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="603.0" y="638.0"></text>
</g>
<g>
<title>JavaThread::run() (39 samples, 46.43%)</title><rect x="614.0" y="755.0" width="547.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="617.0" y="766.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (39 samples, 46.43%)</title><rect x="614.0" y="739.0" width="547.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="617.0" y="750.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (32 samples, 38.10%)</title><rect x="614.0" y="723.0" width="449.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="617.0" y="734.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (28 samples, 33.33%)</title><rect x="614.0" y="707.0" width="393.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="617.0" y="718.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (9 samples, 10.71%)</title><rect x="614.0" y="691.0" width="126.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="617.0" y="702.0">C2Compiler::comp..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (9 samples, 10.71%)</title><rect x="614.0" y="675.0" width="126.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="617.0" y="686.0">Compile::Compile..</text>
</g>
<g>
<title>Compile::Code_Gen() (5 samples, 5.95%)</title><rect x="614.0" y="659.0" width="70.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="617.0" y="670.0">Compile:..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 1.19%)</title><rect x="614.0" y="643.0" width="14.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="617.0" y="654.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 1.19%)</title><rect x="614.0" y="627.0" width="14.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="617.0" y="638.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 1.19%)</title><rect x="628.1" y="643.0" width="14.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="631.1" y="654.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 1.19%)</title><rect x="628.1" y="627.0" width="14.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="631.1" y="638.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 1.19%)</title><rect x="628.1" y="611.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="631.1" y="622.0"></text>
</g>
<g>
<title>xorI_rRegNode::Expand(State*, Node_List&amp;, Node*) (1 samples, 1.19%)</title><rect x="628.1" y="595.0" width="14.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="631.1" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 3.57%)</title><rect x="642.1" y="643.0" width="42.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="645.1" y="654.0">Phas..</text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 1.19%)</title><rect x="642.1" y="627.0" width="14.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="645.1" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 1.19%)</title><rect x="642.1" y="611.0" width="14.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="645.1" y="622.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 1.19%)</title><rect x="642.1" y="595.0" width="14.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="645.1" y="606.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 2.38%)</title><rect x="656.2" y="627.0" width="28.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="659.2" y="638.0">Ph..</text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 2.38%)</title><rect x="656.2" y="611.0" width="28.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="659.2" y="622.0">Ph..</text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (2 samples, 2.38%)</title><rect x="656.2" y="595.0" width="28.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="659.2" y="606.0">Ph..</text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 1.19%)</title><rect x="656.2" y="579.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="659.2" y="590.0"></text>
</g>
<g>
<title>RegMask::overlap(RegMask const&amp;) const (1 samples, 1.19%)</title><rect x="656.2" y="563.0" width="14.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="659.2" y="574.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 1.19%)</title><rect x="670.2" y="579.0" width="14.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="673.2" y="590.0"></text>
</g>
<g>
<title>Compile::Optimize() (3 samples, 3.57%)</title><rect x="684.3" y="659.0" width="42.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="687.3" y="670.0">Comp..</text>
</g>
<g>
<title>Compile::optimize_loops(PhaseIterGVN&amp;, LoopOptsMode) (2 samples, 2.38%)</title><rect x="684.3" y="643.0" width="28.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="687.3" y="654.0">Co..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 2.38%)</title><rect x="684.3" y="627.0" width="28.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="687.3" y="638.0">Ph..</text>
</g>
<g>
<title>Compile::cleanup_loop_predicates(PhaseIterGVN&amp;) (1 samples, 1.19%)</title><rect x="684.3" y="611.0" width="14.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="687.3" y="622.0"></text>
</g>
<g>
<title>PhaseIterGVN::replace_node(Node*, Node*) (1 samples, 1.19%)</title><rect x="684.3" y="595.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="687.3" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 1.19%)</title><rect x="684.3" y="579.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="687.3" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 1.19%)</title><rect x="684.3" y="563.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="687.3" y="574.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 1.19%)</title><rect x="684.3" y="547.0" width="14.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="687.3" y="558.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 1.19%)</title><rect x="684.3" y="531.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="687.3" y="542.0"></text>
</g>
<g>
<title>Node::del_out(Node*) (1 samples, 1.19%)</title><rect x="684.3" y="515.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="687.3" y="526.0"></text>
</g>
<g>
<title>Node::is_top() const (1 samples, 1.19%)</title><rect x="684.3" y="499.0" width="14.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="687.3" y="510.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 1.19%)</title><rect x="698.3" y="611.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="701.3" y="622.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 1.19%)</title><rect x="698.3" y="595.0" width="14.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="701.3" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 1.19%)</title><rect x="698.3" y="579.0" width="14.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="701.3" y="590.0"></text>
</g>
<g>
<title>Unique_Node_List::push(Node*) (1 samples, 1.19%)</title><rect x="698.3" y="563.0" width="14.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="701.3" y="574.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 1.19%)</title><rect x="712.4" y="643.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="715.4" y="654.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 1.19%)</title><rect x="712.4" y="627.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="715.4" y="638.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 1.19%)</title><rect x="726.4" y="659.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="729.4" y="670.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 1.19%)</title><rect x="726.4" y="643.0" width="14.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="729.4" y="654.0"></text>
</g>
<g>
<title>CompilationLog::log_compile(JavaThread*, CompileTask*) (1 samples, 1.19%)</title><rect x="740.5" y="691.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="743.5" y="702.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (1 samples, 1.19%)</title><rect x="740.5" y="675.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="743.5" y="686.0"></text>
</g>
<g>
<title>CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool) (1 samples, 1.19%)</title><rect x="740.5" y="659.0" width="14.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="743.5" y="670.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 1.19%)</title><rect x="740.5" y="643.0" width="14.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="743.5" y="654.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write(char const*, __va_list_tag*, bool) (1 samples, 1.19%)</title><rect x="740.5" y="627.0" width="14.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="743.5" y="638.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf(char*, unsigned long, char const*, __va_list_tag*, bool, unsigned long&amp;) (1 samples, 1.19%)</title><rect x="740.5" y="611.0" width="14.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="743.5" y="622.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 1.19%)</title><rect x="740.5" y="595.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="743.5" y="606.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 1.19%)</title><rect x="740.5" y="579.0" width="14.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="743.5" y="590.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 1.19%)</title><rect x="740.5" y="563.0" width="14.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="743.5" y="574.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 1.19%)</title><rect x="740.5" y="547.0" width="14.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="743.5" y="558.0"></text>
</g>
<g>
<title>__vfprintf (1 samples, 1.19%)</title><rect x="740.5" y="531.0" width="14.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="743.5" y="542.0"></text>
</g>
<g>
<title>__sfvwrite (1 samples, 1.19%)</title><rect x="740.5" y="515.0" width="14.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="743.5" y="526.0"></text>
</g>
<g>
<title>CompilationLog::log_nmethod(JavaThread*, nmethod*) (1 samples, 1.19%)</title><rect x="754.5" y="691.0" width="14.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="757.5" y="702.0"></text>
</g>
<g>
<title>StringEventLog::log(Thread*, char const*, ...) (1 samples, 1.19%)</title><rect x="754.5" y="675.0" width="14.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="757.5" y="686.0"></text>
</g>
<g>
<title>StringEventLog::logv(Thread*, char const*, __va_list_tag*) (1 samples, 1.19%)</title><rect x="754.5" y="659.0" width="14.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="757.5" y="670.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 1.19%)</title><rect x="754.5" y="643.0" width="14.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="757.5" y="654.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 1.19%)</title><rect x="754.5" y="627.0" width="14.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="757.5" y="638.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 1.19%)</title><rect x="754.5" y="611.0" width="14.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="757.5" y="622.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 1.19%)</title><rect x="754.5" y="595.0" width="14.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="757.5" y="606.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 1.19%)</title><rect x="754.5" y="579.0" width="14.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="757.5" y="590.0"></text>
</g>
<g>
<title>__vfprintf (1 samples, 1.19%)</title><rect x="754.5" y="563.0" width="14.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="757.5" y="574.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 17.86%)</title><rect x="768.6" y="691.0" width="210.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="771.6" y="702.0">Compiler::compile_method(ciE..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (15 samples, 17.86%)</title><rect x="768.6" y="675.0" width="210.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="771.6" y="686.0">Compilation::Compilation(Abs..</text>
</g>
<g>
<title>Compilation::compile_method() (15 samples, 17.86%)</title><rect x="768.6" y="659.0" width="210.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="771.6" y="670.0">Compilation::compile_method()</text>
</g>
<g>
<title>Compilation::compile_java_method() (14 samples, 16.67%)</title><rect x="768.6" y="643.0" width="196.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="771.6" y="654.0">Compilation::compile_java_..</text>
</g>
<g>
<title>Compilation::build_hir() (9 samples, 10.71%)</title><rect x="768.6" y="627.0" width="126.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="771.6" y="638.0">Compilation::bui..</text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (8 samples, 9.52%)</title><rect x="768.6" y="611.0" width="112.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="771.6" y="622.0">IR::IR(Compila..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (8 samples, 9.52%)</title><rect x="768.6" y="595.0" width="112.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="771.6" y="606.0">IRScope::IRSco..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (8 samples, 9.52%)</title><rect x="768.6" y="579.0" width="112.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="771.6" y="590.0">GraphBuilder::..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 9.52%)</title><rect x="768.6" y="563.0" width="112.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="771.6" y="574.0">GraphBuilder::..</text>
</g>
<g>
<title>BlockEnd::as_BlockEnd() (1 samples, 1.19%)</title><rect x="768.6" y="547.0" width="14.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="771.6" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (7 samples, 8.33%)</title><rect x="782.6" y="547.0" width="98.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="785.6" y="558.0">GraphBuilder..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 7.14%)</title><rect x="796.7" y="531.0" width="84.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="799.7" y="542.0">GraphBuild..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 4.76%)</title><rect x="796.7" y="515.0" width="56.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="799.7" y="526.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 4.76%)</title><rect x="796.7" y="499.0" width="56.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="799.7" y="510.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 4.76%)</title><rect x="796.7" y="483.0" width="56.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.7" y="494.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 4.76%)</title><rect x="796.7" y="467.0" width="56.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="799.7" y="478.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 4.76%)</title><rect x="796.7" y="451.0" width="56.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="799.7" y="462.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 4.76%)</title><rect x="796.7" y="435.0" width="56.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="799.7" y="446.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 4.76%)</title><rect x="796.7" y="419.0" width="56.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="799.7" y="430.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 4.76%)</title><rect x="796.7" y="403.0" width="56.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="799.7" y="414.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 4.76%)</title><rect x="796.7" y="387.0" width="56.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="799.7" y="398.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 4.76%)</title><rect x="796.7" y="371.0" width="56.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="799.7" y="382.0">GraphB..</text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 1.19%)</title><rect x="796.7" y="355.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="799.7" y="366.0"></text>
</g>
<g>
<title>GraphBuilder::handle_exception(Instruction*) (1 samples, 1.19%)</title><rect x="796.7" y="339.0" width="14.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.7" y="350.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 1.19%)</title><rect x="796.7" y="323.0" width="14.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="799.7" y="334.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 1.19%)</title><rect x="796.7" y="307.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="799.7" y="318.0"></text>
</g>
<g>
<title>ciMethod::raw_liveness_at_bci(int) (1 samples, 1.19%)</title><rect x="796.7" y="291.0" width="14.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="799.7" y="302.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 1.19%)</title><rect x="796.7" y="275.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="799.7" y="286.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 1.19%)</title><rect x="796.7" y="259.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="799.7" y="270.0"></text>
</g>
<g>
<title>BitMap::set_from(BitMap const&amp;) (1 samples, 1.19%)</title><rect x="796.7" y="243.0" width="14.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="799.7" y="254.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 2.38%)</title><rect x="810.7" y="355.0" width="28.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="813.7" y="366.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 2.38%)</title><rect x="810.7" y="339.0" width="28.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="813.7" y="350.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 1.19%)</title><rect x="810.7" y="323.0" width="14.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="813.7" y="334.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 1.19%)</title><rect x="810.7" y="307.0" width="14.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="813.7" y="318.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 1.19%)</title><rect x="810.7" y="291.0" width="14.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="813.7" y="302.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 1.19%)</title><rect x="810.7" y="275.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="813.7" y="286.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 1.19%)</title><rect x="810.7" y="259.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="813.7" y="270.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 1.19%)</title><rect x="810.7" y="243.0" width="14.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="813.7" y="254.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 1.19%)</title><rect x="810.7" y="227.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="813.7" y="238.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 1.19%)</title><rect x="810.7" y="211.0" width="14.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="813.7" y="222.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 1.19%)</title><rect x="810.7" y="195.0" width="14.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="813.7" y="206.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 1.19%)</title><rect x="810.7" y="179.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="813.7" y="190.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 1.19%)</title><rect x="810.7" y="163.0" width="14.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="813.7" y="174.0"></text>
</g>
<g>
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 1.19%)</title><rect x="810.7" y="147.0" width="14.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="813.7" y="158.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 1.19%)</title><rect x="824.8" y="323.0" width="14.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="827.8" y="334.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 1.19%)</title><rect x="824.8" y="307.0" width="14.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="827.8" y="318.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 1.19%)</title><rect x="824.8" y="291.0" width="14.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="827.8" y="302.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 1.19%)</title><rect x="824.8" y="275.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="827.8" y="286.0"></text>
</g>
<g>
<title>ciMethodData::ciMethodData(MethodData*) (1 samples, 1.19%)</title><rect x="824.8" y="259.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="827.8" y="270.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 1.19%)</title><rect x="824.8" y="243.0" width="14.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="827.8" y="254.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 1.19%)</title><rect x="838.8" y="355.0" width="14.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="841.8" y="366.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 1.19%)</title><rect x="838.8" y="339.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="841.8" y="350.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 1.19%)</title><rect x="838.8" y="323.0" width="14.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="841.8" y="334.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 1.19%)</title><rect x="838.8" y="307.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="841.8" y="318.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 1.19%)</title><rect x="838.8" y="291.0" width="14.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="841.8" y="302.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 1.19%)</title><rect x="838.8" y="275.0" width="14.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="841.8" y="286.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 1.19%)</title><rect x="838.8" y="259.0" width="14.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="841.8" y="270.0"></text>
</g>
<g>
<title>hash_symbol(char const*, int, bool) (1 samples, 1.19%)</title><rect x="838.8" y="243.0" width="14.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="841.8" y="254.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 2.38%)</title><rect x="852.9" y="515.0" width="28.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="855.9" y="526.0">ci..</text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 2.38%)</title><rect x="852.9" y="499.0" width="28.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="855.9" y="510.0">ci..</text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 1.19%)</title><rect x="852.9" y="483.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="855.9" y="494.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 1.19%)</title><rect x="866.9" y="483.0" width="14.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="869.9" y="494.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 1.19%)</title><rect x="866.9" y="467.0" width="14.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="869.9" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (1 samples, 1.19%)</title><rect x="866.9" y="451.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="869.9" y="462.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 1.19%)</title><rect x="866.9" y="435.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="869.9" y="446.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 1.19%)</title><rect x="866.9" y="419.0" width="14.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="869.9" y="430.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 1.19%)</title><rect x="866.9" y="403.0" width="14.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="869.9" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 1.19%)</title><rect x="866.9" y="387.0" width="14.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="869.9" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 1.19%)</title><rect x="866.9" y="371.0" width="14.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="869.9" y="382.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (1 samples, 1.19%)</title><rect x="866.9" y="355.0" width="14.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="869.9" y="366.0"></text>
</g>
<g>
<title>IR::compute_code() (1 samples, 1.19%)</title><rect x="881.0" y="611.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="884.0" y="622.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (1 samples, 1.19%)</title><rect x="881.0" y="595.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="884.0" y="606.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::assign_loop_depth(BlockBegin*) (1 samples, 1.19%)</title><rect x="881.0" y="579.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="884.0" y="590.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (5 samples, 5.95%)</title><rect x="895.0" y="627.0" width="70.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="898.0" y="638.0">Compilat..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 1.19%)</title><rect x="895.0" y="611.0" width="14.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="898.0" y="622.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (1 samples, 1.19%)</title><rect x="895.0" y="595.0" width="14.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="898.0" y="606.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 1.19%)</title><rect x="895.0" y="579.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="898.0" y="590.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 1.19%)</title><rect x="895.0" y="563.0" width="14.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="898.0" y="574.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 1.19%)</title><rect x="895.0" y="547.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="898.0" y="558.0"></text>
</g>
<g>
<title>GrowableArray&lt;ResolveNode*&gt;::raw_at_put_grow(int, ResolveNode* const&amp;, ResolveNode* const&amp;) (1 samples, 1.19%)</title><rect x="895.0" y="531.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="898.0" y="542.0"></text>
</g>
<g>
<title>GrowableArray&lt;ResolveNode*&gt;::grow(int) (1 samples, 1.19%)</title><rect x="895.0" y="515.0" width="14.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="898.0" y="526.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (4 samples, 4.76%)</title><rect x="909.0" y="611.0" width="56.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="912.0" y="622.0">Linear..</text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 1.19%)</title><rect x="909.0" y="595.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="912.0" y="606.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 1.19%)</title><rect x="909.0" y="579.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="912.0" y="590.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 1.19%)</title><rect x="909.0" y="563.0" width="14.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="912.0" y="574.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 1.19%)</title><rect x="909.0" y="547.0" width="14.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="912.0" y="558.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 1.19%)</title><rect x="923.1" y="595.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="926.1" y="606.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 1.19%)</title><rect x="923.1" y="579.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="926.1" y="590.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 1.19%)</title><rect x="923.1" y="563.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="926.1" y="574.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 2.38%)</title><rect x="937.1" y="595.0" width="28.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="940.1" y="606.0">Li..</text>
</g>
<g>
<title>LinearScan::add_temp(int, int, IntervalUseKind, BasicType) (1 samples, 1.19%)</title><rect x="951.2" y="579.0" width="14.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="954.2" y="590.0"></text>
</g>
<g>
<title>LinearScan::create_interval(int) (1 samples, 1.19%)</title><rect x="951.2" y="563.0" width="14.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="954.2" y="574.0"></text>
</g>
<g>
<title>Compilation::initialize() (1 samples, 1.19%)</title><rect x="965.2" y="643.0" width="14.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="968.2" y="654.0"></text>
</g>
<g>
<title>DebugInformationRecorder::DebugInformationRecorder(OopRecorder*) (1 samples, 1.19%)</title><rect x="965.2" y="627.0" width="14.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="968.2" y="638.0"></text>
</g>
<g>
<title>GrowableArray&lt;DIR_Chunk*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 1.19%)</title><rect x="965.2" y="611.0" width="14.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="968.2" y="622.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 1.19%)</title><rect x="979.3" y="691.0" width="14.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="982.3" y="702.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 1.19%)</title><rect x="979.3" y="675.0" width="14.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="982.3" y="686.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 1.19%)</title><rect x="979.3" y="659.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="982.3" y="670.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 1.19%)</title><rect x="979.3" y="643.0" width="14.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="982.3" y="654.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 1.19%)</title><rect x="979.3" y="627.0" width="14.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="982.3" y="638.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 1.19%)</title><rect x="979.3" y="611.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="982.3" y="622.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 1.19%)</title><rect x="979.3" y="595.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="982.3" y="606.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (1 samples, 1.19%)</title><rect x="993.3" y="691.0" width="14.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="996.3" y="702.0"></text>
</g>
<g>
<title>CompileQueue::get() (4 samples, 4.76%)</title><rect x="1007.4" y="707.0" width="56.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1010.4" y="718.0">Compil..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 3.57%)</title><rect x="1007.4" y="691.0" width="42.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1010.4" y="702.0">Moni..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 3.57%)</title><rect x="1007.4" y="675.0" width="42.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1010.4" y="686.0">Moni..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 3.57%)</title><rect x="1007.4" y="659.0" width="42.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1010.4" y="670.0">os::..</text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 2.38%)</title><rect x="1007.4" y="643.0" width="28.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1010.4" y="654.0">__..</text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 1.19%)</title><rect x="1035.5" y="643.0" width="14.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1038.5" y="654.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::select_task(CompileQueue*) (1 samples, 1.19%)</title><rect x="1049.5" y="691.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1052.5" y="702.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::update_rate(long, Method*) (1 samples, 1.19%)</title><rect x="1049.5" y="675.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1052.5" y="686.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (2 samples, 2.38%)</title><rect x="1063.6" y="723.0" width="28.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1066.6" y="734.0">NM..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 1.19%)</title><rect x="1063.6" y="707.0" width="14.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1066.6" y="718.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 1.19%)</title><rect x="1063.6" y="691.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1066.6" y="702.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 1.19%)</title><rect x="1063.6" y="675.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1066.6" y="686.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 1.19%)</title><rect x="1063.6" y="659.0" width="14.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1066.6" y="670.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 1.19%)</title><rect x="1077.6" y="707.0" width="14.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1080.6" y="718.0"></text>
</g>
<g>
<title>NMethodSweeper::do_stack_scanning() (1 samples, 1.19%)</title><rect x="1077.6" y="691.0" width="14.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1080.6" y="702.0"></text>
</g>
<g>
<title>Handshake::execute(ThreadClosure*) (1 samples, 1.19%)</title><rect x="1077.6" y="675.0" width="14.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1080.6" y="686.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (1 samples, 1.19%)</title><rect x="1077.6" y="659.0" width="14.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1080.6" y="670.0"></text>
</g>
<g>
<title>__psynch_cvsignal (1 samples, 1.19%)</title><rect x="1077.6" y="643.0" width="14.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1080.6" y="654.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (5 samples, 5.95%)</title><rect x="1091.7" y="723.0" width="70.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1094.7" y="734.0">ServiceT..</text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 1.19%)</title><rect x="1091.7" y="707.0" width="14.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1094.7" y="718.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 1.19%)</title><rect x="1091.7" y="691.0" width="14.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1094.7" y="702.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 1.19%)</title><rect x="1091.7" y="675.0" width="14.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1094.7" y="686.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (1 samples, 1.19%)</title><rect x="1091.7" y="659.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1094.7" y="670.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (1 samples, 1.19%)</title><rect x="1091.7" y="643.0" width="14.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.7" y="654.0"></text>
</g>
<g>
<title>JvmtiDeferredEventQueue::dequeue() (1 samples, 1.19%)</title><rect x="1105.7" y="707.0" width="14.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1108.7" y="718.0"></text>
</g>
<g>
<title>free_tiny (1 samples, 1.19%)</title><rect x="1105.7" y="691.0" width="14.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1108.7" y="702.0"></text>
</g>
<g>
<title>tiny_free_no_lock (1 samples, 1.19%)</title><rect x="1105.7" y="675.0" width="14.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1108.7" y="686.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 3.57%)</title><rect x="1119.8" y="707.0" width="42.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1122.8" y="718.0">Moni..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 3.57%)</title><rect x="1119.8" y="691.0" width="42.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1122.8" y="702.0">Moni..</text>
</g>
<g>
<title>os::PlatformEvent::park() (3 samples, 3.57%)</title><rect x="1119.8" y="675.0" width="42.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.8" y="686.0">os::..</text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 3.57%)</title><rect x="1119.8" y="659.0" width="42.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1122.8" y="670.0">__ps..</text>
</g>
<g>
<title>VMThread::run() (2 samples, 2.38%)</title><rect x="1161.9" y="755.0" width="28.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.9" y="766.0">VM..</text>
</g>
<g>
<title>VMThread::loop() (2 samples, 2.38%)</title><rect x="1161.9" y="739.0" width="28.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.9" y="750.0">VM..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 1.19%)</title><rect x="1161.9" y="723.0" width="14.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.9" y="734.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 1.19%)</title><rect x="1161.9" y="707.0" width="14.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.9" y="718.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 1.19%)</title><rect x="1161.9" y="691.0" width="14.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.9" y="702.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 1.19%)</title><rect x="1161.9" y="675.0" width="14.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1164.9" y="686.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) (1 samples, 1.19%)</title><rect x="1176.0" y="723.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.0" y="734.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 1.19%)</title><rect x="1176.0" y="707.0" width="14.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.0" y="718.0"></text>
</g>
<g>
<title>VM_RevokeBias::doit() (1 samples, 1.19%)</title><rect x="1176.0" y="691.0" width="14.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.0" y="702.0"></text>
</g>
<g>
<title>revoke_bias(oopDesc*, bool, bool, JavaThread*, JavaThread**) (1 samples, 1.19%)</title><rect x="1176.0" y="675.0" width="14.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1179.0" y="686.0"></text>
</g>
<g>
<title>get_or_compute_monitor_info(JavaThread*) (1 samples, 1.19%)</title><rect x="1176.0" y="659.0" width="14.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1179.0" y="670.0"></text>
</g>
<g>
<title>vframe::java_sender() const (1 samples, 1.19%)</title><rect x="1176.0" y="643.0" width="14.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.0" y="654.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 1.19%)</title><rect x="1176.0" y="627.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.0" y="638.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 1.19%)</title><rect x="1176.0" y="611.0" width="14.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1179.0" y="622.0"></text>
</g>
</g>
</svg>
